class Solution {
public:
    int waysToChange(int n) {
        //coins{25, 10, 5, 1}
        //dp[i,j]表示使用前i种硬币凑成n分钱的方法数
        //dp[i, j] = dp[i - 1, j] + dp[i, j - coins[i]]
        int coins[4] = { 1,5,10,25 };
        vector<int> v(n + 1, 1);
        vector<vector<int>> dp(4, v);

        for (int i = 1; i < 4; i++) {
            for (int j = 1; j < n + 1; j++) {
                int index = j - coins[i];
                if (index < 0) dp[i][j] = dp[i - 1][j];
                else dp[i][j] = (dp[i - 1][j] + dp[i][index]) % 1000000007;
            }
        }
        return dp[3][n];
    }
};
