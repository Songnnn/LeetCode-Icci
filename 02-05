/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        //一开始想着，先将输入转成整数，再将求和后的结果转成链表
        //但是这样做的话，int类型有可能存放不了那么大的数
        //从头到尾，一位一位相加，中间保留进位
        ListNode* head = new ListNode(0); //头结点
        ListNode* p = head;
        int c = 0; //进位
        while (l1 || l2) {
            int x1 = l1 != NULL ? l1->val : 0;
            int x2 = l2 != NULL ? l2->val : 0;
            int sum = x1 + x2 + c;
            c=0;
            if (sum >= 10) {
                sum = sum - 10;
                c = 1;
            }
            ListNode* s = new ListNode(sum);
            s->next = NULL;
            p->next = s;
            p = s;
            if (l1) l1 = l1->next;
            if (l2) l2 = l2->next;
        }
        if (c == 1) {
            ListNode* s = new ListNode(1);
            s->next = NULL;
            p->next = s;
        }
        return head->next;
    }
};
