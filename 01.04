class Solution {
public:
    bool canPermutePalindrome(string s) {
        //char是字符串中出现的字符，int是其出现的次数
        map<char, int> m;
        for (int i = 0; i < s.size(); i++) {
            if (m.count(s[i]) == 0) m[s[i]] = 1;
            else if (m[s[i]] == 0) m[s[i]] = 1;
            else m[s[i]]--;
        }
        //map的遍历还是只能用迭代器，m.size()那种行不通
        int sum = 0;
        map<char, int>::iterator iter;
        for (iter = m.begin(); iter != m.end(); iter++) {
            sum += iter->second;
        }
        if (sum == 0 || sum == 1) return true;
        return false;
    }
};
